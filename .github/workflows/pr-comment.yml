name: PR Comment on Merge

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main]

permissions:
  pull-requests: write
  issues: write

jobs:
  comment-on-merge:
    name: Comment on Merged PR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Grab the refs since actions shallow clones by default
      - name: Fetch AI refs
        run: |
          git fetch origin refs/ai/*:refs/ai/*
          git fetch origin refs/ai/*:refs/remotes/origin/ai/*

      - name: Install git-ai
        run: |
          curl -sSL https://gitai.run/install.sh | bash
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Get git-ai stats
        id: git-ai-stats
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            COMMIT_SHA="${{ github.event.pull_request.head.sha }}"
          else
            COMMIT_SHA="${{ github.sha }}"
          fi
          git-ai stats $COMMIT_SHA > git_ai_stats.txt
          echo "commit_sha=$COMMIT_SHA" >> $GITHUB_OUTPUT

      - name: Comment on PR or Commit
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_PAT }}
          script: |
            const fs = require('fs');
            const statsOutput = fs.readFileSync('git_ai_stats.txt', 'utf8');
            const title = 'üìù **PR Commit Analysis**';
            const body = '```\n' + statsOutput + '\n```';

            if (context.eventName === 'pull_request') {
              const { owner, repo, number } = context.issue;
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: number,
                body: title + '\n\n' + body
              });
            } else if (context.eventName === 'push') {
              const owner = context.repo.owner;
              const repo = context.repo.repo;
              const commitSha = process.env.COMMIT_SHA || context.sha;
              await github.rest.repos.createCommitComment({
                owner,
                repo,
                commit_sha: commitSha,
                body: title + '\n\n' + body
              });
            }
